---

- name: define hosts
  hosts: localhost
  gather_facts: no
  roles:
    - define_inventory

- name: check inputs
  hosts: localhost
  gather_facts: no
  tasks:
    - name: ensure vars are defined
      fail:
        msg: "{{ item }} must be defined!"
      when: lookup('vars', item) is undefined
      loop:
        - emqx_script_result_file
        # not required when running in bastion itself
        # - emqx_bastion_server
        - emqx_test_script_file
        - emqtt_bench_interval
        - emqtt_bench_pub_interval
        - emqtt_bench_number_of_connections
        - emqtt_bench_session_expiry_interval
        - script_timezone
    # - name: ensure test exists
    #   # delegate_to: localhost
    #   stat:
    #     path: "templates/{{ emqx_test_script_file }}"
    #   register: script_file_stat
    # - name: ensure test exists
    #   fail:
    #     msg: "test script {{ emqx_test_script_file }} does not exist!"
    #   when: not script_file_stat.stat.exists
    - debug:
        msg: |
          script: {{ emqx_test_script_file }}

- name: run and record tests
  hosts: loadgen
  become: yes
  become_user: root
  force_handlers: True
  # strategy: free
  # max_fail_percentage: 0
  tasks:
    - name: start epmd
      shell: "epmd -daemon"
    - name: copy scripts
      template:
        src: "{{ item }}"
        dest: /root/emqtt-bench/
        mode: '0777'
      loop:
        - "run-tests.py"
        # - "conn-test.sh"
        # - "sub1-test.sh"
        # - "sub-unique-test.sh"
      vars:
        timeout: "{{ script_timeout_s | default('300') }}"
        num_procs: "{{ emqx_test_procs | default(1) | int }}"
        start_n: "{{ (loadgen_num * (emqx_test_procs | default(1) | int)) | int }}"
    - name: run the script
      shell: |
        nohup /root/emqtt-bench/run-tests.py {{ emqx_test_script_file }} 2>&1 | systemd-cat -t cluster_test &
        echo $!
      register: test_runner
    - debug:
        var: test_runner
    - name: give the scripts some time...
      pause:
        seconds: "{{ script_timeout_s | default('300') }}"
    # - name: kill the script
    #   shell: "kill {{ test_runner.stdout }}"
    #   ignore_errors: yes
    - name: REALLY kill the scripts
      args:
        executable: /bin/bash
      shell: |
        pgrep -a beam.smp | grep '/root/emqtt-bench/emqtt_bench' | grep -v remsh | awk '{ print $1; }' | xargs kill -9 || true;
        pkill -f -9 run-tests.py || true
      ignore_errors: yes

- name: collect logs
  hosts: emqx
  become: yes
  become_user: root
  tags: [collect_logs]
  roles:
    - collect_logs

- name: collect lg logs
  hosts: loadgen
  become: yes
  become_user: root
  tags: [collect_logs]
  roles:
    - collect_lg_logs

- name: move results
  hosts: localhost
  tags: [collect_logs]
  roles:
    - move_results

# - name: test
#   hosts: localhost
#   tags: [collect]
#   tasks:
#     - name: compress
#       archive:
#         path:
#           - './tmp/data/{{ emqx_script_result_file }}/*'
#         dest: "./tmp/data/{{ emqx_script_result_file }}.tar.bz2"
#         remove: yes
#         format: bz2

...
