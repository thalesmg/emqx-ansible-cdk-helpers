---

- name: define hosts
  hosts: localhost
  gather_facts: no
  roles:
    - define_inventory

- name: config emqx
  hosts: emqx
  become: yes
  become_user: root
  tasks:
    # - name: apply tuning to emqx | set kernel parameters
    #   script: ./files/tuning-emqx.sh
    - name: set db backend configs
      block:
        - name: set facts
          set_fact:
            emqx_db_role: "{{ 'core' if inventory_hostname in cores else 'replicant' }}"
        - debug:
            var: "{{ item }}"
          loop:
            - cores
            - replicants
        - name: ensure etc directory
          file:
            path: /etc/emqx
            state: directory
        - name: set cluster-override.conf
          template:
            src: cluster-override.conf
            dest: /etc/emqx/cluster-override.conf
          notify:
            - restart emqx
          register: cluster_override_update
        # - name: stop emqx
        #   systemd:
        #     name: emqx
        #     state: stopped
        #   when: cluster_override_update.changed
        # - name: drop mnesia data and the logs
        #   shell: "rm -rf {{ item }}/*"
        #   with_items:
        #     - "/var/lib/emqx/mnesia"
        #     # - "/var/log/emqx"
        #   when: cluster_override_update.changed
      when: emqx_db_backend is defined and emqx_num_cores is defined
      vars:
        cores: "{{ groups['emqx'][0:(emqx_num_cores | int)] }}"
        replicants: "{{ groups['emqx'][(emqx_num_cores | int):] }}"
    - name: beam overlays
      block:
        - name: overlay stat path
          stat:
            path: "{{ item.dest }}"
          register: overlay_dests
          loop: "{{ overlays }}"
        # - debug:
        #     var: overlay_dests
        - name: assert overlay path exists
          fail:
            msg: "one or more destinations are absent: {{ overlay_dests.results }}"
          when: "{{ overlay_dests.results
                    | map(attribute='stat')
                    | map(attribute='exists')
                    | reject('true')
                    | length != 0 }}"
        - name: copy overlay file
          copy:
            dest: "{{ item.dest }}"
            src: "{{ item.src }}"
            backup: yes
          loop: "{{ overlays }}"
          notify:
            - restart emqx
      when: emqx_beam_overlays
      vars:
        overlays:
          - dest: "/usr/lib/emqx/lib/mnesia-4.19/ebin/mnesia_log.beam"
            src: "mnesia_log.beam"
    - name: increase LimitNOFILE in emqx.service
      lineinfile:
        path: "/lib/systemd/system/emqx.service"
        regexp: "^LimitNOFILE"
        line: "LimitNOFILE=1000000000"
      notify:
        - restart emqx
    # - name: install python and pip
    #   package:
    #     name:
    #       - python3
    #       - python3-pip
    #     state: present
    # - name: install python psutil
    #   pip:
    #     name: psutil
    #     state: present
  handlers:
    - name: restart emqx
      systemd:
        name: emqx
        # state: restarted
        state: reloaded
        daemon_reload: yes

# - name: apply tuning to loadgen
#   hosts: loadgen
#   become: yes
#   become_user: root
#   tasks:
#     - name: set kernel parameters
#       script: ./files/tuning-loadgen.sh

...
